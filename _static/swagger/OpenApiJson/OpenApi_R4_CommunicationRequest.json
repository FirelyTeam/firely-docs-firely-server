{
  "openapi": "3.0.1",
  "info": {
    "title": "Firely Server - CommunicationRequest",
    "version": "6.3.0+85fabb8f54b85a88db93ba03d8f93be463c6707c"
  },
  "servers": [
    {
      "url": "https://server.fire.ly/",
      "description": "Firely Server (non-secured)"
    },
    {
      "url": "https://secure.server.fire.ly/",
      "description": "Firely Server"
    }
  ],
  "paths": {
    "/CommunicationRequest": {
      "post": {
        "tags": [
          "CommunicationRequest"
        ],
        "summary": "create: Create a new CommunicationRequest instance",
        "operationId": "CreateCommunicationRequest",
        "requestBody": {
          "description": "A FHIR CommunicationRequest",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationRequest"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationRequest"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationRequest"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "405": {
            "description": "METHOD NOT ALLOWED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "409": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "412": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CommunicationRequest"
        ],
        "summary": "search-type: Search for CommunicationRequest instances",
        "operationId": "SearchCommunicationRequestGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/_elements"
          },
          {
            "$ref": "#/components/parameters/_summary"
          },
          {
            "$ref": "#/components/parameters/_content"
          },
          {
            "$ref": "#/components/parameters/_filter"
          },
          {
            "$ref": "#/components/parameters/_id"
          },
          {
            "$ref": "#/components/parameters/_in"
          },
          {
            "$ref": "#/components/parameters/_language"
          },
          {
            "$ref": "#/components/parameters/_lastUpdated"
          },
          {
            "$ref": "#/components/parameters/_list"
          },
          {
            "$ref": "#/components/parameters/_profile"
          },
          {
            "$ref": "#/components/parameters/_query"
          },
          {
            "$ref": "#/components/parameters/_security"
          },
          {
            "$ref": "#/components/parameters/_source"
          },
          {
            "$ref": "#/components/parameters/_tag"
          },
          {
            "$ref": "#/components/parameters/_text"
          },
          {
            "$ref": "#/components/parameters/_contained"
          },
          {
            "$ref": "#/components/parameters/_count"
          },
          {
            "$ref": "#/components/parameters/_graph"
          },
          {
            "$ref": "#/components/parameters/_include"
          },
          {
            "$ref": "#/components/parameters/_revinclude"
          },
          {
            "$ref": "#/components/parameters/_score"
          },
          {
            "$ref": "#/components/parameters/_sort"
          },
          {
            "$ref": "#/components/parameters/_total"
          },
          {
            "$ref": "#/components/parameters/_format"
          },
          {
            "$ref": "#/components/parameters/_has"
          },
          {
            "$ref": "#/components/parameters/authored"
          },
          {
            "$ref": "#/components/parameters/based-on"
          },
          {
            "$ref": "#/components/parameters/category"
          },
          {
            "$ref": "#/components/parameters/encounter"
          },
          {
            "$ref": "#/components/parameters/group-identifier"
          },
          {
            "$ref": "#/components/parameters/identifier"
          },
          {
            "$ref": "#/components/parameters/medium"
          },
          {
            "$ref": "#/components/parameters/occurrence"
          },
          {
            "$ref": "#/components/parameters/patient"
          },
          {
            "$ref": "#/components/parameters/priority"
          },
          {
            "$ref": "#/components/parameters/recipient"
          },
          {
            "$ref": "#/components/parameters/replaces"
          },
          {
            "$ref": "#/components/parameters/requester"
          },
          {
            "$ref": "#/components/parameters/sender"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/subject"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/CommunicationRequest/{logical_id}": {
      "delete": {
        "tags": [
          "CommunicationRequest"
        ],
        "summary": "delete: Perform a logical delete on a CommunicationRequest instance",
        "operationId": "DeleteCommunicationRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "$ref": "#/components/parameters/_content"
          },
          {
            "$ref": "#/components/parameters/_filter"
          },
          {
            "$ref": "#/components/parameters/_id"
          },
          {
            "$ref": "#/components/parameters/_in"
          },
          {
            "$ref": "#/components/parameters/_language"
          },
          {
            "$ref": "#/components/parameters/_lastUpdated"
          },
          {
            "$ref": "#/components/parameters/_list"
          },
          {
            "$ref": "#/components/parameters/_profile"
          },
          {
            "$ref": "#/components/parameters/_query"
          },
          {
            "$ref": "#/components/parameters/_security"
          },
          {
            "$ref": "#/components/parameters/_source"
          },
          {
            "$ref": "#/components/parameters/_tag"
          },
          {
            "$ref": "#/components/parameters/_text"
          },
          {
            "$ref": "#/components/parameters/_count"
          },
          {
            "$ref": "#/components/parameters/_format"
          },
          {
            "$ref": "#/components/parameters/_has"
          },
          {
            "$ref": "#/components/parameters/authored"
          },
          {
            "$ref": "#/components/parameters/based-on"
          },
          {
            "$ref": "#/components/parameters/category"
          },
          {
            "$ref": "#/components/parameters/encounter"
          },
          {
            "$ref": "#/components/parameters/group-identifier"
          },
          {
            "$ref": "#/components/parameters/identifier"
          },
          {
            "$ref": "#/components/parameters/medium"
          },
          {
            "$ref": "#/components/parameters/occurrence"
          },
          {
            "$ref": "#/components/parameters/patient"
          },
          {
            "$ref": "#/components/parameters/priority"
          },
          {
            "$ref": "#/components/parameters/recipient"
          },
          {
            "$ref": "#/components/parameters/replaces"
          },
          {
            "$ref": "#/components/parameters/requester"
          },
          {
            "$ref": "#/components/parameters/sender"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/subject"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationRequest"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationRequest"
                }
              }
            }
          },
          "202": {
            "description": "ACCEPTED"
          },
          "204": {
            "description": "NO CONTENT"
          },
          "400": {
            "description": "BAD REQUEST",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "405": {
            "description": "METHOD NOT ALLOWED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "409": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CommunicationRequest"
        ],
        "summary": "patch: Patch a CommunicationRequest instance",
        "operationId": "PatchCommunicationRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          }
        ],
        "requestBody": {
          "description": "Patch to apply to a FHIR CommunicationRequest record",
          "content": {},
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationRequest"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationRequest"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "412": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CommunicationRequest"
        ],
        "summary": "read: Read a FHIR CommunicationRequest",
        "operationId": "ReadCommunicationRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "$ref": "#/components/parameters/_elements"
          },
          {
            "$ref": "#/components/parameters/_summary"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationRequest"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationRequest"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CommunicationRequest"
        ],
        "summary": "update,create: Update or Create a CommunicationRequest instance",
        "operationId": "UpdateOrCreateCommunicationRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "$ref": "#/components/parameters/_content"
          },
          {
            "$ref": "#/components/parameters/_filter"
          },
          {
            "$ref": "#/components/parameters/_id"
          },
          {
            "$ref": "#/components/parameters/_in"
          },
          {
            "$ref": "#/components/parameters/_language"
          },
          {
            "$ref": "#/components/parameters/_lastUpdated"
          },
          {
            "$ref": "#/components/parameters/_list"
          },
          {
            "$ref": "#/components/parameters/_profile"
          },
          {
            "$ref": "#/components/parameters/_query"
          },
          {
            "$ref": "#/components/parameters/_security"
          },
          {
            "$ref": "#/components/parameters/_source"
          },
          {
            "$ref": "#/components/parameters/_tag"
          },
          {
            "$ref": "#/components/parameters/_text"
          },
          {
            "$ref": "#/components/parameters/_count"
          },
          {
            "$ref": "#/components/parameters/_format"
          },
          {
            "$ref": "#/components/parameters/_has"
          },
          {
            "$ref": "#/components/parameters/_id"
          },
          {
            "$ref": "#/components/parameters/_lastUpdated"
          },
          {
            "$ref": "#/components/parameters/_profile"
          },
          {
            "$ref": "#/components/parameters/_security"
          },
          {
            "$ref": "#/components/parameters/_source"
          },
          {
            "$ref": "#/components/parameters/_tag"
          },
          {
            "$ref": "#/components/parameters/authored"
          },
          {
            "$ref": "#/components/parameters/based-on"
          },
          {
            "$ref": "#/components/parameters/category"
          },
          {
            "$ref": "#/components/parameters/encounter"
          },
          {
            "$ref": "#/components/parameters/group-identifier"
          },
          {
            "$ref": "#/components/parameters/identifier"
          },
          {
            "$ref": "#/components/parameters/medium"
          },
          {
            "$ref": "#/components/parameters/occurrence"
          },
          {
            "$ref": "#/components/parameters/patient"
          },
          {
            "$ref": "#/components/parameters/priority"
          },
          {
            "$ref": "#/components/parameters/recipient"
          },
          {
            "$ref": "#/components/parameters/replaces"
          },
          {
            "$ref": "#/components/parameters/requester"
          },
          {
            "$ref": "#/components/parameters/sender"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/subject"
          }
        ],
        "requestBody": {
          "description": "An updated FHIR CommunicationRequest",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationRequest"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationRequest"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationRequest"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "405": {
            "description": "METHOD NOT ALLOWED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "409": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "412": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/CommunicationRequest/_search": {
      "post": {
        "tags": [
          "CommunicationRequest"
        ],
        "summary": "search-type: Search for CommunicationRequest instances",
        "operationId": "SearchCommunicationRequestPost",
        "requestBody": {
          "description": "FHIR search parameters",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "_elements": {
                    "title": "_elements",
                    "type": "string"
                  },
                  "_summary": {
                    "title": "_summary",
                    "type": "string"
                  },
                  "_content": {
                    "title": "_content",
                    "type": "string"
                  },
                  "_filter": {
                    "title": "_filter",
                    "type": "string"
                  },
                  "_id": {
                    "title": "_id",
                    "type": "string"
                  },
                  "_in": {
                    "title": "_in",
                    "type": "string"
                  },
                  "_language": {
                    "title": "_language",
                    "type": "string"
                  },
                  "_lastUpdated": {
                    "title": "_lastUpdated",
                    "type": "string"
                  },
                  "_list": {
                    "title": "_list",
                    "type": "string"
                  },
                  "_profile": {
                    "title": "_profile",
                    "type": "string"
                  },
                  "_query": {
                    "title": "_query",
                    "type": "string"
                  },
                  "_security": {
                    "title": "_security",
                    "type": "string"
                  },
                  "_source": {
                    "title": "_source",
                    "type": "string"
                  },
                  "_tag": {
                    "title": "_tag",
                    "type": "string"
                  },
                  "_text": {
                    "title": "_text",
                    "type": "string"
                  },
                  "_contained": {
                    "title": "_contained",
                    "type": "string"
                  },
                  "_count": {
                    "title": "_count",
                    "type": "string"
                  },
                  "_graph": {
                    "title": "_graph",
                    "type": "string"
                  },
                  "_include": {
                    "title": "_include",
                    "type": "string"
                  },
                  "_revinclude": {
                    "title": "_revinclude",
                    "type": "string"
                  },
                  "_score": {
                    "title": "_score",
                    "type": "string"
                  },
                  "_sort": {
                    "title": "_sort",
                    "type": "string"
                  },
                  "_total": {
                    "title": "_total",
                    "type": "string"
                  },
                  "_format": {
                    "title": "_format",
                    "type": "string"
                  },
                  "_has": {
                    "title": "_has",
                    "type": "string"
                  },
                  "authored": {
                    "title": "authored",
                    "type": "string"
                  },
                  "based-on": {
                    "title": "based-on",
                    "type": "string"
                  },
                  "category": {
                    "title": "category",
                    "type": "string"
                  },
                  "encounter": {
                    "title": "encounter",
                    "type": "string"
                  },
                  "group-identifier": {
                    "title": "group-identifier",
                    "type": "string"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "string"
                  },
                  "medium": {
                    "title": "medium",
                    "type": "string"
                  },
                  "occurrence": {
                    "title": "occurrence",
                    "type": "string"
                  },
                  "patient": {
                    "title": "patient",
                    "type": "string"
                  },
                  "priority": {
                    "title": "priority",
                    "type": "string"
                  },
                  "recipient": {
                    "title": "recipient",
                    "type": "string"
                  },
                  "replaces": {
                    "title": "replaces",
                    "type": "string"
                  },
                  "requester": {
                    "title": "requester",
                    "type": "string"
                  },
                  "sender": {
                    "title": "sender",
                    "type": "string"
                  },
                  "status": {
                    "title": "status",
                    "type": "string"
                  },
                  "subject": {
                    "title": "subject",
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/CommunicationRequest/{logical_id}/_history/{resource_version}": {
      "get": {
        "tags": [
          "CommunicationRequest"
        ],
        "summary": "vread: Read CommunicationRequest instance with specific version",
        "operationId": "VReadCommunicationRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "$ref": "#/components/parameters/resource_version"
          },
          {
            "$ref": "#/components/parameters/_elements"
          },
          {
            "$ref": "#/components/parameters/_summary"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationRequest"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationRequest"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/CommunicationRequest/{logical_id}/$meta-add": {
      "post": {
        "tags": [
          "CommunicationRequest"
        ],
        "summary": "operation: execute the Add profiles, tags, and security labels to a resource operation",
        "operationId": "CommunicationRequestInstanceMetaAddPost",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          }
        ],
        "requestBody": {
          "description": "Input parameters to the operation",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/CommunicationRequest/{logical_id}/$meta-delete": {
      "post": {
        "tags": [
          "CommunicationRequest"
        ],
        "summary": "operation: execute the Delete profiles, tags, and security labels for a resource operation",
        "operationId": "CommunicationRequestInstanceMetaDeletePost",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          }
        ],
        "requestBody": {
          "description": "Input parameters to the operation",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/CommunicationRequest/{logical_id}/$meta": {
      "post": {
        "tags": [
          "CommunicationRequest"
        ],
        "summary": "operation: execute the Access a list of profiles, tags, and security labels operation",
        "operationId": "CommunicationRequestInstanceMetaPost",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          }
        ],
        "requestBody": {
          "description": "Input parameters to the operation",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/CommunicationRequest/$meta": {
      "post": {
        "tags": [
          "CommunicationRequest"
        ],
        "summary": "operation: execute the Access a list of profiles, tags, and security labels operation",
        "operationId": "CommunicationRequestMetaPost",
        "requestBody": {
          "description": "Input parameters to the operation",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "CommunicationRequest": {
        "type": "object",
        "description": "A request for information to be sent to a receiver"
      },
      "OperationOutcome": {
        "type": "object",
        "description": "Information about the success/failure of an action"
      },
      "Bundle": {
        "type": "object",
        "description": "Contains a collection of resources"
      },
      "Parameters": {
        "type": "object",
        "description": "Operation Request or Response"
      }
    },
    "parameters": {
      "_format": {
        "name": "_format",
        "in": "query",
        "description": "Override the HTTP content negotiation",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_pretty": {
        "name": "_pretty",
        "in": "query",
        "description": "Ask for a pretty printed response for human convenience",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_elements": {
        "name": "_elements",
        "in": "query",
        "description": "Ask for a particular set of elements to be returned",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_summary": {
        "name": "_summary",
        "in": "query",
        "description": "Return only portions of resources, based on pre-defined levels",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_content": {
        "name": "_content",
        "in": "query",
        "description": "Search on the entire content of the resource",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_filter": {
        "name": "_filter",
        "in": "query",
        "description": "Provide an inline query expression",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_id": {
        "name": "_id",
        "in": "query",
        "description": "Logical id of this artifact",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_in": {
        "name": "_in",
        "in": "query",
        "description": "Allows for the retrieval of resources that are active members of a CareTeam, Group, or List",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_language": {
        "name": "_language",
        "in": "query",
        "description": "Language of the resource content",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_lastUpdated": {
        "name": "_lastUpdated",
        "in": "query",
        "description": "When the resource version last changed",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_list": {
        "name": "_list",
        "in": "query",
        "description": "Allows for the retrieval of resources that are referenced by a List resource or by one of the pre-defined functional lists",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_profile": {
        "name": "_profile",
        "in": "query",
        "description": "Profiles this resource claims to conform to",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_query": {
        "name": "_query",
        "in": "query",
        "description": "A custom search profile that describes a specific defined query operation",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_security": {
        "name": "_security",
        "in": "query",
        "description": "Security Labels applied to this resource",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_source": {
        "name": "_source",
        "in": "query",
        "description": "Identifies where the resource comes from",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_tag": {
        "name": "_tag",
        "in": "query",
        "description": "Tags applied to this resource",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_text": {
        "name": "_text",
        "in": "query",
        "description": "Perform searches against the narrative content of a resource",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_contained": {
        "name": "_contained",
        "in": "query",
        "description": "Request different types of handling for contained resources",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_count": {
        "name": "_count",
        "in": "query",
        "description": "Limit the number of match results per page of response",
        "style": "form",
        "schema": {
          "type": "number"
        }
      },
      "_graph": {
        "name": "_graph",
        "in": "query",
        "description": "Include additional resources according to a GraphDefinition",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_include": {
        "name": "_include",
        "in": "query",
        "description": "Include additional resources, based on following links forward across references",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_revinclude": {
        "name": "_revinclude",
        "in": "query",
        "description": "Include additional resources, based on following reverse links across references",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_score": {
        "name": "_score",
        "in": "query",
        "description": "Request match relevance in results",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_sort": {
        "name": "_sort",
        "in": "query",
        "description": "Request which order results should be returned in",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_total": {
        "name": "_total",
        "in": "query",
        "description": "Request a precision of the total number of results for a request",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "_has": {
        "name": "_has",
        "in": "query",
        "description": "Enables querying a reverse chain",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "authored": {
        "name": "authored",
        "in": "query",
        "description": "Date request signed",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "based-on": {
        "name": "based-on",
        "in": "query",
        "description": "Plan/proposal/order fulfilled by this request",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "category": {
        "name": "category",
        "in": "query",
        "description": "Classification of the consent statement - for indexing/retrieval",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "encounter": {
        "name": "encounter",
        "in": "query",
        "description": "Multiple Resources: \r\n\r\n* [Composition](composition.html): Context of the Composition\r\n* [DeviceRequest](devicerequest.html): Encounter during which request was created\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [List](list.html): Context in which list created\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [Procedure](procedure.html): Encounter created as part of\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [ServiceRequest](servicerequest.html): An encounter in which this request is made\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "group-identifier": {
        "name": "group-identifier",
        "in": "query",
        "description": "Composite request this is part of",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "identifier": {
        "name": "identifier",
        "in": "query",
        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): External ids for this item\r\n* [CarePlan](careplan.html): External Ids for this plan\r\n* [CareTeam](careteam.html): External Ids for this team\r\n* [Composition](composition.html): Version-independent identifier for the Composition\r\n* [Condition](condition.html): A unique identifier of the condition record\r\n* [Consent](consent.html): Identifier for this record (external references)\r\n* [DetectedIssue](detectedissue.html): Unique id for the detected issue\r\n* [DeviceRequest](devicerequest.html): Business identifier for request/order\r\n* [DiagnosticReport](diagnosticreport.html): An identifier for the report\r\n* [DocumentManifest](documentmanifest.html): Unique Identifier for the set of documents\r\n* [DocumentReference](documentreference.html): Master Version Specific Identifier\r\n* [Encounter](encounter.html): Identifier(s) by which this encounter is known\r\n* [EpisodeOfCare](episodeofcare.html): Business Identifier(s) relevant for this EpisodeOfCare\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a record identifier\r\n* [Goal](goal.html): External Ids for this goal\r\n* [ImagingStudy](imagingstudy.html): Identifiers for the Study, such as DICOM Study Instance UID and Accession number\r\n* [Immunization](immunization.html): Business identifier\r\n* [List](list.html): Business identifier\r\n* [MedicationAdministration](medicationadministration.html): Return administrations with this external identifier\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses with this external identifier\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions with this external identifier\r\n* [MedicationStatement](medicationstatement.html): Return statements with this external identifier\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this external identifier\r\n* [Observation](observation.html): The unique id for a particular observation\r\n* [Procedure](procedure.html): A unique identifier for a procedure\r\n* [RiskAssessment](riskassessment.html): Unique identifier for the assessment\r\n* [ServiceRequest](servicerequest.html): Identifiers assigned to this order\r\n* [SupplyDelivery](supplydelivery.html): External identifier\r\n* [SupplyRequest](supplyrequest.html): Business Identifier for SupplyRequest\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this external identifier\r\n",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "medium": {
        "name": "medium",
        "in": "query",
        "description": "A channel of communication",
        "schema": {
          "type": "string"
        }
      },
      "occurrence": {
        "name": "occurrence",
        "in": "query",
        "description": "When service should occur",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "patient": {
        "name": "patient",
        "in": "query",
        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Who the sensitivity is for\r\n* [CarePlan](careplan.html): Who the care plan is for\r\n* [CareTeam](careteam.html): Who care team is for\r\n* [ClinicalImpression](clinicalimpression.html): Patient or group assessed\r\n* [Composition](composition.html): Who and/or what the composition is about\r\n* [Condition](condition.html): Who has the condition?\r\n* [Consent](consent.html): Who the consent applies to\r\n* [DetectedIssue](detectedissue.html): Associated patient\r\n* [DeviceRequest](devicerequest.html): Individual the service is ordered for\r\n* [DeviceUseStatement](deviceusestatement.html): Search by subject - a patient\r\n* [DiagnosticReport](diagnosticreport.html): The subject of the report if a patient\r\n* [DocumentManifest](documentmanifest.html): The subject of the set of documents\r\n* [DocumentReference](documentreference.html): Who/what is the subject of the document\r\n* [Encounter](encounter.html): The patient or group present at the encounter\r\n* [EpisodeOfCare](episodeofcare.html): The patient who is the focus of this episode of care\r\n* [FamilyMemberHistory](familymemberhistory.html): The identity of a subject to list family member history items for\r\n* [Flag](flag.html): The identity of a subject to list flags for\r\n* [Goal](goal.html): Who this goal is intended for\r\n* [ImagingStudy](imagingstudy.html): Who the study is about\r\n* [Immunization](immunization.html): The patient for the vaccination record\r\n* [List](list.html): If all resources have the same subject\r\n* [MedicationAdministration](medicationadministration.html): The identity of a patient to list administrations  for\r\n* [MedicationDispense](medicationdispense.html): The identity of a patient to list dispenses  for\r\n* [MedicationRequest](medicationrequest.html): Returns prescriptions for a specific patient\r\n* [MedicationStatement](medicationstatement.html): Returns statements for a specific patient.\r\n* [NutritionOrder](nutritionorder.html): The identity of the person who requires the diet, formula or nutritional supplement\r\n* [Observation](observation.html): The subject that the observation is about (if patient)\r\n* [Procedure](procedure.html): Search by subject - a patient\r\n* [RiskAssessment](riskassessment.html): Who/what does assessment apply to?\r\n* [ServiceRequest](servicerequest.html): Search by subject - a patient\r\n* [SupplyDelivery](supplydelivery.html): Patient for whom the item is supplied\r\n* [VisionPrescription](visionprescription.html): The identity of a patient to list dispenses for\r\n",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "priority": {
        "name": "priority",
        "in": "query",
        "description": "routine | urgent | asap | stat",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "recipient": {
        "name": "recipient",
        "in": "query",
        "description": "Intended to get notified about this set of documents",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "replaces": {
        "name": "replaces",
        "in": "query",
        "description": "CarePlan replaced by this CarePlan",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "requester": {
        "name": "requester",
        "in": "query",
        "description": "Who/what is requesting service",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "sender": {
        "name": "sender",
        "in": "query",
        "description": "Message sender",
        "schema": {
          "type": "string"
        }
      },
      "status": {
        "name": "status",
        "in": "query",
        "description": "entered-in-error | draft | active |suspended | completed",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "subject": {
        "name": "subject",
        "in": "query",
        "description": "Individual the service is ordered for",
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "logical_id": {
        "name": "logical_id",
        "in": "path",
        "description": "Resource Logical ID",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      },
      "resource_version": {
        "name": "resource_version",
        "in": "path",
        "description": "Resource Version Number",
        "required": true,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "openId": {
        "type": "openIdConnect",
        "openIdConnectUrl": "https://secure.server.fire.ly/.well-known/smart-configuration"
      }
    }
  },
  "security": [
    {
      "openId": [
        "openid",
        "profile",
        "fhirUser",
        "offline_access"
      ]
    }
  ],
  "tags": [
    {
      "name": "CommunicationRequest",
      "description": "A request for information to be sent to a receiver"
    }
  ]
}
