{
  "swagger": "2.0",
  "info": {
    "title": "Firely Server - List",
    "version": "4.10.0"
  },
  "host": "server.fire.ly",
  "schemes": [
    "https"
  ],
  "paths": {
    "/List": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "create: Create a new List instance",
        "operationId": "CreateList",
        "consumes": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "produces": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A FHIR List",
            "required": true,
            "schema": {
              "$ref": "#/definitions/List"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/List"
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "405": {
            "description": "METHOD NOT ALLOWED",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "409": {
            "description": "CONFLICT",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "412": {
            "description": "CONFLICT",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "422": {
            "description": "UNPROCESSABLE",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "get": {
        "tags": [
          "List"
        ],
        "summary": "search-type: Search for List instances",
        "operationId": "SearchListGet",
        "produces": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/_elements"
          },
          {
            "$ref": "#/parameters/_summary"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "$ref": "#/parameters/_filter"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "$ref": "#/parameters/_in"
          },
          {
            "$ref": "#/parameters/_language"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_list"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_query"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "$ref": "#/parameters/_text"
          },
          {
            "$ref": "#/parameters/_contained"
          },
          {
            "$ref": "#/parameters/_count"
          },
          {
            "$ref": "#/parameters/_graph"
          },
          {
            "$ref": "#/parameters/_include"
          },
          {
            "$ref": "#/parameters/_revinclude"
          },
          {
            "$ref": "#/parameters/_score"
          },
          {
            "$ref": "#/parameters/_sort"
          },
          {
            "$ref": "#/parameters/_total"
          },
          {
            "$ref": "#/parameters/_format"
          },
          {
            "$ref": "#/parameters/_has"
          },
          {
            "$ref": "#/parameters/code"
          },
          {
            "$ref": "#/parameters/date"
          },
          {
            "$ref": "#/parameters/empty-reason"
          },
          {
            "$ref": "#/parameters/encounter"
          },
          {
            "$ref": "#/parameters/identifier"
          },
          {
            "$ref": "#/parameters/item"
          },
          {
            "$ref": "#/parameters/notes"
          },
          {
            "$ref": "#/parameters/patient"
          },
          {
            "$ref": "#/parameters/source"
          },
          {
            "$ref": "#/parameters/status"
          },
          {
            "$ref": "#/parameters/subject"
          },
          {
            "$ref": "#/parameters/title"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Bundle"
            }
          },
          "410": {
            "description": "GONE",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        }
      ]
    },
    "/List/{logical_id}": {
      "delete": {
        "tags": [
          "List"
        ],
        "summary": "delete: Perform a loical delete on a List instance",
        "operationId": "DeleteList",
        "produces": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/logical_id"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "$ref": "#/parameters/_filter"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "$ref": "#/parameters/_in"
          },
          {
            "$ref": "#/parameters/_language"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_list"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_query"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "$ref": "#/parameters/_text"
          },
          {
            "$ref": "#/parameters/_count"
          },
          {
            "$ref": "#/parameters/_format"
          },
          {
            "$ref": "#/parameters/_has"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "$ref": "#/parameters/code"
          },
          {
            "$ref": "#/parameters/date"
          },
          {
            "$ref": "#/parameters/empty-reason"
          },
          {
            "$ref": "#/parameters/encounter"
          },
          {
            "$ref": "#/parameters/identifier"
          },
          {
            "$ref": "#/parameters/item"
          },
          {
            "$ref": "#/parameters/notes"
          },
          {
            "$ref": "#/parameters/patient"
          },
          {
            "$ref": "#/parameters/source"
          },
          {
            "$ref": "#/parameters/status"
          },
          {
            "$ref": "#/parameters/subject"
          },
          {
            "$ref": "#/parameters/title"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/List"
            }
          },
          "202": {
            "description": "ACCEPTED"
          },
          "204": {
            "description": "NO CONTENT"
          },
          "400": {
            "description": "BAD REQUEST",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "405": {
            "description": "METHOD NOT ALLOWED",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "409": {
            "description": "CONFLICT",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "List"
        ],
        "summary": "patch: Patch a List instance",
        "operationId": "PatchList",
        "consumes": [ ],
        "produces": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/logical_id"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Patch to apply to a FHIR List record",
            "required": true,
            "schema": { }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/List"
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "412": {
            "description": "CONFLICT",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "get": {
        "tags": [
          "List"
        ],
        "summary": "read: Read a FHIR List",
        "operationId": "ReadList",
        "produces": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/logical_id"
          },
          {
            "$ref": "#/parameters/_elements"
          },
          {
            "$ref": "#/parameters/_summary"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/List"
            }
          },
          "410": {
            "description": "GONE",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "put": {
        "tags": [
          "List"
        ],
        "summary": "update,create: Update or Create a List instance",
        "operationId": "UpdateOrCreateList",
        "consumes": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "produces": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/logical_id"
          },
          {
            "$ref": "#/parameters/_content"
          },
          {
            "$ref": "#/parameters/_filter"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "$ref": "#/parameters/_in"
          },
          {
            "$ref": "#/parameters/_language"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_list"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_query"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "$ref": "#/parameters/_text"
          },
          {
            "$ref": "#/parameters/_count"
          },
          {
            "$ref": "#/parameters/_format"
          },
          {
            "$ref": "#/parameters/_has"
          },
          {
            "$ref": "#/parameters/_id"
          },
          {
            "$ref": "#/parameters/_lastUpdated"
          },
          {
            "$ref": "#/parameters/_profile"
          },
          {
            "$ref": "#/parameters/_security"
          },
          {
            "$ref": "#/parameters/_source"
          },
          {
            "$ref": "#/parameters/_tag"
          },
          {
            "$ref": "#/parameters/code"
          },
          {
            "$ref": "#/parameters/date"
          },
          {
            "$ref": "#/parameters/empty-reason"
          },
          {
            "$ref": "#/parameters/encounter"
          },
          {
            "$ref": "#/parameters/identifier"
          },
          {
            "$ref": "#/parameters/item"
          },
          {
            "$ref": "#/parameters/notes"
          },
          {
            "$ref": "#/parameters/patient"
          },
          {
            "$ref": "#/parameters/source"
          },
          {
            "$ref": "#/parameters/status"
          },
          {
            "$ref": "#/parameters/subject"
          },
          {
            "$ref": "#/parameters/title"
          },
          {
            "in": "body",
            "name": "body",
            "description": "An updated FHIR List",
            "required": true,
            "schema": {
              "$ref": "#/definitions/List"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/List"
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "405": {
            "description": "METHOD NOT ALLOWED",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "409": {
            "description": "CONFLICT",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "412": {
            "description": "CONFLICT",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "422": {
            "description": "UNPROCESSABLE",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        }
      ]
    },
    "/List/_search": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "search-type: Search for List instances",
        "operationId": "SearchListPost",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "_elements",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_summary",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_content",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_filter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_id",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_in",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_language",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_lastUpdated",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_list",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_profile",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_query",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_security",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_tag",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_text",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_contained",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_count",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_graph",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_include",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_revinclude",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_score",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_sort",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_total",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_format",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "_has",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "code",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "date",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "empty-reason",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "encounter",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "item",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "notes",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "patient",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "source",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "status",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "subject",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Bundle"
            }
          },
          "410": {
            "description": "GONE",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        }
      ]
    },
    "/List/{logical_id}/_history/{resource_version}": {
      "get": {
        "tags": [
          "List"
        ],
        "summary": "vread: Read List instance with specific version",
        "operationId": "VReadList",
        "produces": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/logical_id"
          },
          {
            "$ref": "#/parameters/resource_version"
          },
          {
            "$ref": "#/parameters/_elements"
          },
          {
            "$ref": "#/parameters/_summary"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/List"
            }
          },
          "410": {
            "description": "GONE",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        }
      ]
    },
    "/List/{logical_id}/$meta-add": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "operation: This operation takes a meta, and adds the profiles, tags, and security labels found in it to the nominated resource",
        "operationId": "ListInstanceMetaAddPost",
        "consumes": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "produces": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/logical_id"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Input parameters to the operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          },
          "410": {
            "description": "GONE",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        }
      ]
    },
    "/List/{logical_id}/$meta-delete": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "operation: This operation takes a meta, and deletes the profiles, tags, and security labels found in it from the nominated resource",
        "operationId": "ListInstanceMetaDeletePost",
        "consumes": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "produces": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/logical_id"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Input parameters to the operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          },
          "410": {
            "description": "GONE",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        }
      ]
    },
    "/List/{logical_id}/$meta": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "operation: This operation retrieves a summary of the profiles, tags, and security labels for the given scope; e.g. for each scope:  \n\n* system-wide: a list of all profiles, tags and security labels in use by the system \n* resource-type level: A list of all profiles, tags, and security labels for the resource type \n* individual resource level: A list of all profiles, tags, and security labels for the current version of the resource.  Also, as a special case, this operation (and other meta operations) can be performed on a historical version of a resource)",
        "operationId": "ListInstanceMetaPost",
        "consumes": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "produces": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/logical_id"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Input parameters to the operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          },
          "410": {
            "description": "GONE",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        }
      ]
    },
    "/List/$meta": {
      "post": {
        "tags": [
          "List"
        ],
        "summary": "operation: This operation retrieves a summary of the profiles, tags, and security labels for the given scope; e.g. for each scope:  \n\n* system-wide: a list of all profiles, tags and security labels in use by the system \n* resource-type level: A list of all profiles, tags, and security labels for the resource type \n* individual resource level: A list of all profiles, tags, and security labels for the current version of the resource.  Also, as a special case, this operation (and other meta operations) can be performed on a historical version of a resource)",
        "operationId": "ListMetaPost",
        "consumes": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "produces": [
          "application/fhir+json",
          "application/fhir+xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Input parameters to the operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Parameters"
            }
          },
          "410": {
            "description": "GONE",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "404": {
            "description": "NOT FOUND",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/_format"
        },
        {
          "$ref": "#/parameters/_pretty"
        }
      ]
    }
  },
  "definitions": {
    "List": {
      "description": "A list is a curated collection of resources",
      "type": "object"
    },
    "OperationOutcome": {
      "description": "Information about the success/failure of an action",
      "type": "object"
    },
    "Bundle": {
      "description": "Contains a collection of resources",
      "type": "object"
    },
    "Parameters": {
      "description": "Operation Request or Response",
      "type": "object"
    }
  },
  "parameters": {
    "_format": {
      "in": "query",
      "name": "_format",
      "description": "Override the HTTP content negotiation",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_pretty": {
      "in": "query",
      "name": "_pretty",
      "description": "Ask for a pretty printed response for human convenience",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_elements": {
      "in": "query",
      "name": "_elements",
      "description": "Ask for a particular set of elements to be returned",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_summary": {
      "in": "query",
      "name": "_summary",
      "description": "Return only portions of resources, based on pre-defined levels",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_content": {
      "in": "query",
      "name": "_content",
      "description": "Search on the entire content of the resource",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_filter": {
      "in": "query",
      "name": "_filter",
      "description": "Provide an inline query expression",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_id": {
      "in": "query",
      "name": "_id",
      "description": "Logical id of this artifact",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_in": {
      "in": "query",
      "name": "_in",
      "description": "Allows for the retrieval of resources that are active members of a CareTeam, Group, or List",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_language": {
      "in": "query",
      "name": "_language",
      "description": "Language of the resource content",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_lastUpdated": {
      "in": "query",
      "name": "_lastUpdated",
      "description": "When the resource version last changed",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_list": {
      "in": "query",
      "name": "_list",
      "description": "Allows for the retrieval of resources that are referenced by a List resource or by one of the pre-defined functional lists",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_profile": {
      "in": "query",
      "name": "_profile",
      "description": "Profiles this resource claims to conform to",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_query": {
      "in": "query",
      "name": "_query",
      "description": "A custom search profile that describes a specific defined query operation",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_security": {
      "in": "query",
      "name": "_security",
      "description": "Security Labels applied to this resource",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_source": {
      "in": "query",
      "name": "_source",
      "description": "Identifies where the resource comes from",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_tag": {
      "in": "query",
      "name": "_tag",
      "description": "Tags applied to this resource",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_text": {
      "in": "query",
      "name": "_text",
      "description": "Perform searches against the narrative content of a resource",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_contained": {
      "in": "query",
      "name": "_contained",
      "description": "Request different types of handling for contained resources",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_count": {
      "in": "query",
      "name": "_count",
      "description": "Limit the number of match results per page of response",
      "type": "number",
      "collectionFormat": "multi"
    },
    "_graph": {
      "in": "query",
      "name": "_graph",
      "description": "Include additional resources according to a GraphDefinition",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_include": {
      "in": "query",
      "name": "_include",
      "description": "Include additional resources, based on following links forward across references",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_revinclude": {
      "in": "query",
      "name": "_revinclude",
      "description": "Include additional resources, based on following reverse links across references",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_score": {
      "in": "query",
      "name": "_score",
      "description": "Request match relevance in results",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_sort": {
      "in": "query",
      "name": "_sort",
      "description": "Request which order results should be returned in",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_total": {
      "in": "query",
      "name": "_total",
      "description": "Request a precision of the total number of results for a request",
      "type": "string",
      "collectionFormat": "multi"
    },
    "_has": {
      "in": "query",
      "name": "_has",
      "description": "Enables querying a reverse chain",
      "type": "string",
      "collectionFormat": "multi"
    },
    "code": {
      "in": "query",
      "name": "code",
      "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](condition.html): Code for the condition\r\n* [DeviceRequest](devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](familymemberhistory.html): A search by a condition code\r\n* [List](list.html): What the purpose of this list is\r\n* [Medication](medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](medicationstatement.html): Return statements of this medication code\r\n* [Observation](observation.html): The code of the observation type\r\n* [Procedure](procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](servicerequest.html): What is being requested/ordered\r\n",
      "type": "string",
      "collectionFormat": "multi"
    },
    "date": {
      "in": "query",
      "name": "date",
      "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The capability statement publication date\r\n* [CodeSystem](codesystem.html): The code system publication date\r\n* [CompartmentDefinition](compartmentdefinition.html): The compartment definition publication date\r\n* [ConceptMap](conceptmap.html): The concept map publication date\r\n* [GraphDefinition](graphdefinition.html): The graph definition publication date\r\n* [ImplementationGuide](implementationguide.html): The implementation guide publication date\r\n* [MessageDefinition](messagedefinition.html): The message definition publication date\r\n* [NamingSystem](namingsystem.html): The naming system publication date\r\n* [OperationDefinition](operationdefinition.html): The operation definition publication date\r\n* [SearchParameter](searchparameter.html): The search parameter publication date\r\n* [StructureDefinition](structuredefinition.html): The structure definition publication date\r\n* [StructureMap](structuremap.html): The structure map publication date\r\n* [TerminologyCapabilities](terminologycapabilities.html): The terminology capabilities publication date\r\n* [ValueSet](valueset.html): The value set publication date\r\n",
      "type": "string",
      "collectionFormat": "multi"
    },
    "empty-reason": {
      "in": "query",
      "name": "empty-reason",
      "description": "Why list is empty",
      "type": "string",
      "collectionFormat": "multi"
    },
    "encounter": {
      "in": "query",
      "name": "encounter",
      "description": "Multiple Resources: \r\n\r\n* [Composition](composition.html): Context of the Composition\r\n* [DeviceRequest](devicerequest.html): Encounter during which request was created\r\n* [DiagnosticReport](diagnosticreport.html): The Encounter when the order was made\r\n* [DocumentReference](documentreference.html): Context of the document  content\r\n* [Flag](flag.html): Alert relevant during encounter\r\n* [List](list.html): Context in which list created\r\n* [NutritionOrder](nutritionorder.html): Return nutrition orders with this encounter identifier\r\n* [Observation](observation.html): Encounter related to the observation\r\n* [Procedure](procedure.html): Encounter created as part of\r\n* [RiskAssessment](riskassessment.html): Where was assessment performed?\r\n* [ServiceRequest](servicerequest.html): An encounter in which this request is made\r\n* [VisionPrescription](visionprescription.html): Return prescriptions with this encounter identifier\r\n",
      "type": "string",
      "collectionFormat": "multi"
    },
    "identifier": {
      "in": "query",
      "name": "identifier",
      "description": "Multiple Resources: \r\n\r\n* [CodeSystem](codesystem.html): External identifier for the code system\r\n* [ConceptMap](conceptmap.html): External identifier for the concept map\r\n* [MessageDefinition](messagedefinition.html): External identifier for the message definition\r\n* [StructureDefinition](structuredefinition.html): External identifier for the structure definition\r\n* [StructureMap](structuremap.html): External identifier for the structure map\r\n* [ValueSet](valueset.html): External identifier for the value set\r\n",
      "type": "string",
      "collectionFormat": "multi"
    },
    "item": {
      "in": "query",
      "name": "item",
      "description": "Actual entry",
      "type": "string",
      "collectionFormat": "multi"
    },
    "notes": {
      "in": "query",
      "name": "notes",
      "description": "The annotation  - text content (as markdown)",
      "type": "string",
      "collectionFormat": "multi"
    },
    "patient": {
      "in": "query",
      "name": "patient",
      "description": "Retrieve coverages for a patient",
      "type": "string",
      "collectionFormat": "multi"
    },
    "source": {
      "in": "query",
      "name": "source",
      "description": "Who and/or what defined the list contents (aka Author)",
      "type": "string",
      "collectionFormat": "multi"
    },
    "status": {
      "in": "query",
      "name": "status",
      "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The current status of the capability statement\r\n* [CodeSystem](codesystem.html): The current status of the code system\r\n* [CompartmentDefinition](compartmentdefinition.html): The current status of the compartment definition\r\n* [ConceptMap](conceptmap.html): The current status of the concept map\r\n* [GraphDefinition](graphdefinition.html): The current status of the graph definition\r\n* [ImplementationGuide](implementationguide.html): The current status of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The current status of the message definition\r\n* [NamingSystem](namingsystem.html): The current status of the naming system\r\n* [OperationDefinition](operationdefinition.html): The current status of the operation definition\r\n* [SearchParameter](searchparameter.html): The current status of the search parameter\r\n* [StructureDefinition](structuredefinition.html): The current status of the structure definition\r\n* [StructureMap](structuremap.html): The current status of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The current status of the terminology capabilities\r\n* [ValueSet](valueset.html): The current status of the value set\r\n",
      "type": "string",
      "collectionFormat": "multi"
    },
    "subject": {
      "in": "query",
      "name": "subject",
      "description": "Individual the service is ordered for",
      "type": "string",
      "collectionFormat": "multi"
    },
    "title": {
      "in": "query",
      "name": "title",
      "description": "Multiple Resources: \r\n\r\n* [CapabilityStatement](capabilitystatement.html): The human-friendly name of the capability statement\r\n* [CodeSystem](codesystem.html): The human-friendly name of the code system\r\n* [ConceptMap](conceptmap.html): The human-friendly name of the concept map\r\n* [ImplementationGuide](implementationguide.html): The human-friendly name of the implementation guide\r\n* [MessageDefinition](messagedefinition.html): The human-friendly name of the message definition\r\n* [OperationDefinition](operationdefinition.html): The human-friendly name of the operation definition\r\n* [StructureDefinition](structuredefinition.html): The human-friendly name of the structure definition\r\n* [StructureMap](structuremap.html): The human-friendly name of the structure map\r\n* [TerminologyCapabilities](terminologycapabilities.html): The human-friendly name of the terminology capabilities\r\n* [ValueSet](valueset.html): The human-friendly name of the value set\r\n",
      "type": "string",
      "collectionFormat": "multi"
    },
    "logical_id": {
      "in": "path",
      "name": "logical_id",
      "description": "Resource Logical ID",
      "required": true,
      "type": "string"
    },
    "resource_version": {
      "in": "path",
      "name": "resource_version",
      "description": "Resource Version Number",
      "required": true,
      "type": "string"
    }
  },
  "tags": [
    {
      "name": "List",
      "description": "A list is a curated collection of resources"
    }
  ]
}